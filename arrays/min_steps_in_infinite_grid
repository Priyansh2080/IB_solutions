int getsteps(int x1,int x2,int y1, int y2){
    int steps = 0;
    int x= max(x1,x2)-min(x1,x2);
    int y = max(y1,y2)- min(y1,y2);
    return max(x,y);

/*    while(x1!= x2 || y1!= y2){
        if (x1 < x2) x1 += 1;
        else x1-= 1;
        if (y1 < y2) y1 += 1;
        else y1 -= 1;
        steps++;
    }
    if (x1 == x2){

    }*/
}

int Solution::coverPoints(vector<int> &A, vector<int> &B) {

    if (A.size()!= B.size() || A.size()== 1 ) return 0;

     int ans = 0;
     for (int i = 0 ; i< A.size()-1; i++){

         ans = ans + getsteps(A[i],A[i+1],B[i],B[i+1]);
     }
     return ans;
}
